########################################################################################################################################################################################
#**************************************************************************************************************************************************************************************#
# Code created by Shamslux
# October, 27th 2024
# This code belongs to a personal study project to practice a little with dbt, since it is begining to be used at my current company. :)
########################################################################################################################################################################################
########################################################################################################################################################################################
#******************************************************************************* IMPORTS **********************************************************************************************#
########################################################################################################################################################################################
import duckdb
import pandas as pd

########################################################################################################################################################################################
#******************************************************************************* FUNCTIONS ********************************************************************************************#
########################################################################################################################################################################################
def print_with_border(message):
    border = '*' * (len(message) + 4)
    print(border)
    print(f'* {message} *')
    print(border)

########################################################################################################################################################################################
#******************************************************************************* CODE *************************************************************************************************#
########################################################################################################################################################################################

try:
    conn = duckdb.connect('dev.duckdb')
    print_with_border('Connected to DuckDB')
except Exception as e:
    print(f"Error connecting to DuckDB: {e}")
    raise


try:
    print_with_border('Creating factSales table on duckdb')
    conn.execute('''
    CREATE TABLE factSales (
        saleSK INT PRIMARY KEY,
        customerSK INT,
        productSK INT,
        categorySK INT,
        saleDate INT, -- Usando timeSK no formato YYYYMMDD
        quantity INT,
        totalPrice DECIMAL(10, 2)
    );
    ''')
except Exception as e:
    print(f"Error creating factSales table: {e}")
    conn.close()
    raise


csv_file_path = r'C:\Users\jpmul\OneDrive\Documentos\GitHub\dbt-pokemon-project\dbt_pkmn\duckdb_config\fact_sales_data.csv'  


try:
    print_with_border('Importing data into factSales from CSV')
    conn.execute(f'''
    COPY factSales FROM '{csv_file_path}' (HEADER, DELIMITER ';', FORMAT 'csv');
    ''')
except Exception as e:
    print(f"Error importing data into factSales: {e}")


print_with_border('Closing connection to duckdb')
conn.close()
